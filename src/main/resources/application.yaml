spring:
  application.name: resilience4j-demo
  jackson.serialization.indent_output: true
  kafka:
    consumer:
      group-id: circuit-breaker-demo-group
      bootstrap-server: localhost:9092
      topic: circuit_breaker_demo
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 5

server:
  port: 8080

management.endpoints.web.exposure.include: '*'
management.endpoint.health.show-details: always

management.health.diskspace.enabled: false
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: false

info:
  name: ${spring.application.name}
  description: resilience4j demo
  environment: ${spring.profiles.active}
  version: 0.0.1

management.metrics.tags.application: ${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.metrics.distribution.percentiles-histogram.resilience4j.circuitbreaker.calls: true

#resilience4j.circuitbreaker.metrics.use_legacy_binder: true

spring.kafka.common:
  neverRetryExceptions:
    - com.fasterxml.jackson.databind.exc.InvalidFormatException
    - java.lang.UnsupportedOperationException
    - java.lang.NullPointerException
    - com.fasterxml.jackson.core.JsonParseException
    - com.neobank.customer.common.exception.NeoBankException
  maxAttempts: 3
  defaultDlt: circuit_breaker_demo_dlt
  dltEnabled: true
  backOffPeriod: 10

resilience4j.circuitbreaker:
  instances:
    fintech:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 1
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 80
      eventConsumerBufferSize: 10
      recordExceptions:
#        - java.util.concurrent.TimeoutException
#        - java.io.IOException
#        - org.springframework.web.client.HttpServerErrorException
#        - org.springframework.web.client.ResourceAccessException
        - com.sapient.circuitbreakerdemo.exceptions.OpenCircuitException
      ignoreExceptions:

resilience4j.retry:
  instances:
    fintech:
      maxAttempts: 3
      waitDuration: 1s
      retryExceptions:
#        - java.util.concurrent.TimeoutException
#        - java.io.IOException
#        - org.springframework.web.client.HttpServerErrorException
#        - org.springframework.web.client.ResourceAccessException
        - com.sapient.circuitbreakerdemo.exceptions.RetryException
      ignoreExceptions:


baseUrl: "http://localhost:1080/"